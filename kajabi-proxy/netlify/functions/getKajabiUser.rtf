{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // This is our secure server-side function.\
exports.handler = async function(event, context) \{\
  // Get the API key from Netlify's secure environment variables.\
  const KAJABI_API_KEY = process.env.KAJABI_API_KEY;\
  \
  // We will assume the user's identity is determined by the API key itself\
  // when calling the /me endpoint from a trusted server environment.\
  \
  try \{\
    const response = await fetch('https://api.kajabi.com/v1/me', \{\
      method: 'GET',\
      headers: \{\
        // The secure function sends your API Key as a Bearer token.\
        'Authorization': `Bearer $\{KAJABI_API_KEY\}`\
      \}\
    \});\
\
    if (!response.ok) \{\
      const errorBody = await response.text();\
      console.error(`Kajabi API Error: $\{response.status\} $\{response.statusText\}`, errorBody);\
      return \{\
        statusCode: response.status,\
        body: JSON.stringify(\{ error: `Kajabi API Error: $\{response.statusText\}` \})\
      \};\
    \}\
\
    const userData = await response.json();\
    \
    // Return ONLY the necessary data (the name) back to the Kajabi page.\
    return \{\
      statusCode: 200,\
      headers: \{\
        'Access-Control-Allow-Origin': '*' // Allows your Kajabi site to access this\
      \},\
      body: JSON.stringify(\{ name: userData.data.attributes.name \})\
    \};\
\
  \} catch (error) \{\
    console.error("Function execution error:", error);\
    return \{\
      statusCode: 500,\
      body: JSON.stringify(\{ error: 'Function execution error.' \})\
    \};\
  \}\
\};}